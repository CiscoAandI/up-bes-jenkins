---
# tasks file for docker_install
# Code modified only slightly from its original source:
# https://wwwin-github.cisco.com/raw/SVS-Automation/jenkins-worker/master/playbooks/roles/04-docker/tasks/main.yml
- name: Uninstall Podman and Similar Packages
  become: true
  dnf:
    state: absent
    name: "{{ packages }}"
  vars:
    packages:
      "{{ package_removals }}"

# - name: Set any Proxies required as set in vars.yml
#   set-fact:
#     - "{{ item }}": "{{ proxies[item] }}"
#   with_items: "{{ proxies }}"
      # "{{ proxies }}"
#  when: len(proxies) > 0

- name: Git checkout
  ansible.builtin.git:
    repo: https://github.com/CiscoAandI/up-bes-jenkins.git
    dest: /tmp/docker_install
    version: main
    single_branch: yes
  register: docker_bin_cloned

# - name: Unpack Docker Binary files

- name: Check if Git Checked out correctly
  debug:
    msg: "Docker Bin cloned {{ docker_bin_cloned }}"

- name: Set Fact for path to docker binary xz file
  set_fact:
    docker_arch_path: "{{ playbook_dir }}/roles/docker_install/files/docker-ce-{{ docker_version | default('24.0.6') }}-rpms.tar.xz"

- name: Check if Docker Archive defined correctly
  debug:
    msg: "Docker ARCHIVE {{ docker_arch_path }}"

- name: Unarchive the xz file
  unarchive:
    # https://github.com/CiscoAandI/up-bes-jenkins/blob/BES-worker-docker-install/playbooks/app_install/roles/docker_install/files/docker-24.0.6.tar.xz
    src: "{{ docker_arch_path }}"
    dest: /tmp/
    remote_src: no
  # delegate_to: localhost
  register: docker_bin_unarchived
  when: docker_arch_path is defined

- name: Check if Docker Unarchived correctly
  debug:
    msg: "Docker ARCHIVE {{ docker_bin_unarchived }}"


- name: Install Docker and Related RPM Packages
  any_errors_fatal: false
  ignore_errors: true
  become: true
  yum:
    # state: latest
    name: "{{ package_installs }}"
  register: docker_install


#- name: Run shell command to Docker and Related RPM Packages
#  shell: "rpm -ivh /tmp/*.rpm"
#
##
#- name: yum Install from local repo
#  shell: "yum install -y --cacheonly --disablerepo=* {{ docker_repo_root }}/yum/*.rpm"
#  register: yum_install
#
#- name: dm Install from local repo
#  shell: "yum install -y --cacheonly --disablerepo=* {{ docker_repo_root }}/dm/*.rpm"
#  register: dm_install
#
#- name: lvm2 Install from local repo
#  shell: "yum install -y --cacheonly --disablerepo=* {{ docker_repo_root }}/lvm2/*.rpm"
#  register: lvm2_install
#
#- name: se Install from local repo
#  shell: "yum install -y --cacheonly --disablerepo=* {{ docker_repo_root }}/se/*.rpm"
#  register: se_install
#
#- name: docker Install from local repo
#  shell: "yum install -y --cacheonly --disablerepo=* {{ docker_repo_root }}/docker/*.rpm"
#  register: docker_install


- name: Create docker group
  become: true
  group:
    local: true
    gid: 9000
    name: docker
    state: present

- name: Create Jenkins user and add to docker group
  user:
    name: jenkins
    groups: docker
    append: yes

- name: Start and Enable the Docker service
  service:
    name: docker
    state: started
    enabled: true
    daemon_reload: yes
  when: docker_install is changed

- name: Confirm Docker Installed and Version
  shell: "docker --version"
